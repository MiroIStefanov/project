'use strict';

// преговор 

function solve () {
    const name = 'Todor';
    const age = 23;
    console.log(name + ' ' + age);// конкатенация
}
solve();

function solve1 () {
    const a = 5;       //      number  
    const b = 2;       //      number 
    const c = '5';     //      string
    console.log(a + b);// 7    number
    console.log(a - b);// 3    number
    console.log(a * b);// 10   number
    console.log(a / b);// 2.5  number
    console.log(c + b);// 52   string - има конкатенация
    console.log(c + b + 2);// 522 string - има конкатенация - подрoбно разписване, изпълнява се от ляво на дясно - (c + b + 2) = ('5' + 2 + 2) = ('52' + 2) = 522 string
}
solve1();

// Exercises

/*
1.	Конзолен конвертор: USD към BGN
Напишете функция за конвертиране на щатски долари (USD) в български лева (BGN). Използвайте фиксиран курс между долар и лев: 1 USD = 1.79549 BGN.
Примерен вход и изход
вход	изход		вход	изход		вход	изход
("22")	39.50078		("100")	179.549		("12.5")	22.443625

Насоки
1.	Създайте променливата usd, която приема като вход от конзолата число във вид на стринг и го преобразувайте към числен тип.
2.	Изчислете конвертирането на щатските долари към българските лева. 
3.	Принтирайте изхода на конзолата.
Можете да си помогнете със следния код, който е нарочно замъглен, за да помислите как да го напишете сами:
*/

function usdToBgnConvertor (input) {
    let usd = Number(input),
        bgn = usd * 1.79549;
        console.log(bgn);
}
usdToBgnConvertor ('12.5');

/*
2.	Конзолен конвертор: от радиани в градуси
Напишете функция, която получава ъгъл в радиани (radians) и го преобразува в градуси (degrees). Използвайте формулата: градус = радиан * 180 / π.Числото π в JavaScript програми е достъпно чрез Math.PI. Закръглете резултата до най-близкото цяло число използвайки "toFixed(0)".
Примерен вход и изход
вход	изход		вход	изход		вход	изход		вход	Изход
("3.1416")	180		("6.2832")	360		("0.7854")	45		("0.5236")	30
Насоки
1.	Приемете входните данни (радианите) и ги преобразувайте към числен тип:
2.	Създайте нова променлива, в която ще направите конвертирането от радиани към градуси, като знаете формулата за изчисление:
3.	Принтирайте получените градуси, като закръглите резултата цяло число (използвайте toFixed(0)):
*/

// console.log(Math.PI);
// console.log(Math.abs(-1000));// връща обсолютна стойност на числото в скобите - т.е. връща винаги положително число

function radianToDegreeConvertor (input) {
    let rad = Number(input),
        degree = rad * (180 / Math.PI);
        console.log(degree.toFixed(0));// toFixed(0) закръгля резултата до цяло число
}
radianToDegreeConvertor ('0.5236');

/*
3.	Калкулатор депозити
Напишете функция, която изчислява каква сума ще получите в края на депозитния период при определен лихвен процент. Използвайте следната формула: 
сума = депозирана сума  + срок на депозита * ((депозирана сума * годишен лихвен процент ) / 12)
Вход
Функцията получава 3 аргумента:
1.	Депозирана сума – реално число в интервала [0.00 … 10000.00];
2.	Срок на депозита(в месеци) – цяло число[1..12];
3.	Годишен лихвен процент – реално число в интервала [0.00 … 10000.00];
Изход
Да се отпечата на конзолата сумата в края на срока.
Вход	Изход	Обяснения
("200","3","5.7")	202.85	1. изчисляваме натрупаната лихва: 200 * 5.7% = 11.4лв.
2. изчисляваме лихвата за 1 месец: 11.4лв./12 месеца = 0.95лв
3. общата сума е 200лв депозит + (3 (срок на депозита) * 0.95 лв)
Вход	           Изход	
("2350","6","7")  2432.25	
*/

function calcSumDepositInterest (sumDeposit, montsTerm, nterestPrecentage) {
    let deposit = Number(sumDeposit),
        months = Number(montsTerm),
        precentage = Number(nterestPrecentage),
        sum;
    sum = deposit + months * ((deposit * (precentage / 100)) / 12);
}
calcSumDepositInterest ('2350', '6', '7');

/*
4.	Задължителна литература
За лятната ваканция в списъка със задължителна литература на Жоро има определен брой книги, но Жоро предпочита да играе с приятели навън. Вашата задача е да помогнете на Жоро да изчисли колко часа на ден трябва да отделя, за да прочете необходимата литература, но и да прекарва максимално време навън.
Вход
Функцията получава 3 аргумента:
1.	Брой страници в текущата книга – цяло число в интервала [1…1000];
2.	Страници, които може да прочита за 1 час – цяло число в интервала [1…1000];
3.	Броя на дните, за които трябва да прочете книгата – цяло число в интервала [1…1000];
Изход
Да се отпечата на конзолата броят часове, които Жоро трябва да отделя за четене всеки ден.
Вход	            Изход	
("212","20","2")	5.3	
Обяснения
1. изчисляваме общото време за четене на книгата: 212 / 20 = 10.6 часа
2. получения резултат делим на броя дни, за да получим необходимите часове на ден: 10.6 часа / 2 дни = 5.3 часа на ден
Вход	            Изход	
("432","15","4")	7.2	
*/

function hoursBookReading (allPages, oneHourPages, days) {
    let pages = Number(allPages),
        hourPages = Number(oneHourPages),
        allDays = Number(days),
        hoursDaily;
    hoursDaily = (pages / hourPages) / allDays;
    console.log(hoursDaily);
}
hoursBookReading ('432', '15', '4');

/*
5.	Рожден ден
За рожденият ден на дъщеря си Людмила е решила да организира парти, на което да покани всичките ѝ съученици. За целта е решила да наеме развлекателна зала за деца, чийто наем ще получите, като аргумент на функцията. 
Напишете функция, с която да помогнете на Людмила да изчисли какъв бюджет ще ѝ бъде необходим, като имате следната информация за допълнителните неща, необходими за тържеството:
•	Торта  – цената ѝ е 20% от наема на залата
•	Напитки – цената им е 45% по-малко от тази на тортата
•	Аниматор – цената му е 1/3 от цената за наема на залата
Вход
Функцията получава един аргумент:
•	Наем за залата – цяло число в интервала [100..10000]
Изход
Да се отпечата на конзолата какъв бюджет ще бъде необходим за организиране на тържеството. 
Примерен вход и изход
Вход	   Изход	Обяснения
("2250")	3697.5	наем за залата: 2250
цена за тортата: 2250 * 20% = 450
цена за напитки: 450 – 45% = 247.5
цена за аниматор: 1 / 3 от 2250 = 750
необходима сума: 2250 + 450 + 247.5 +750 = 3697.5
Вход	   Изход
("3720")	6113.2	
*/

function birthday (inRent) {
    let rent = Number(inRent),
        cake = (rent / 100) * 20,
        drinks = (cake / 100) * 55,
        animator = rent / 3,
        budget = rent + cake + drinks + animator;
    console.log(budget);
}
birthday ('3720');

/* 
6.	* Благотворителна кампания
В сладкарница се провежда благотворителна кампания за събиране на средства, в която могат да се включат сладкари от цялата страна. Първоначално получаваме броя на дните, в които тече кампанията и броя на сладкарите, които ще се включат. След това получаваме количеството на тортите, гофретите и палачинките, които ще бъдат приготвени от един сладкар за един ден. Трябва да се има предвид следния ценоразпис:
•	Торта - 45 лв.
•	Гофрета - 5.80 лв.
•	Палачинка – 3.20 лв.
1/8 от крайната сума ще бъде използвана за покриване на разходите за продуктите по време на кампанията. Да се напише програма, която изчислява сумата, която е събрана в края на кампанията.
Вход
Функцията получава 5 аргумента:
1.	Броят на дните, в които тече кампанията – цяло число в интервала [0 … 365]
2.	Броят на сладкарите – цяло число в интервала [0 … 1000]
3.	Броят на тортите – цяло число в интервала [0… 2000]
4.	Броят на гофретите – цяло число в интервала [0 … 2000]
5.	Броят на палачинките – цяло число в интервала [0 … 2000]
Изход
Да се отпечата на конзолата едно число:
•	парите, които са събрани.
Примерен вход и изход
Вход	                     Изход	    
("23","8","14","30","16")	137687.2	
Обяснения
Изчисляваме сумата, която се изкарва на ден за всеки един от продуктите, направени от 1 сладкар:
Торти: 14 * 45 = 630 лв.; 
Гофрети: 30 * 5.80 = 174 лв.; 
Палачинки: 16 * 3.20 = 51.20 лв.
Обща сума за един ден: (630 + 174 + 51.20) * 8 = 6841.60 лв.
Сума събрана от цялата кампания: 6841.60 * 23 = 157356.8лв.
Сума след покриване на разходите: 157356.8 - 1/8 от 157356.8 = 137687.2 лв.
Вход	                     Изход	
("131","5","9","33","46")	426175.75	
*/

function charityCampain (arg1, arg2, arg3, arg4, arg5) {
    let days = Number(arg1),
        confectioners = Number(arg2),
        cakes = Number(arg3) * 45,
        waffles = Number(arg4) * 5.8,
        pancakes = Number(arg5) * 3.2,
        onePersonForOneDay = cakes + waffles + pancakes,
        allPersonsForOneDay = confectioners * onePersonForOneDay,
        campainSum = allPersonsForOneDay * days,
        outSum = campainSum - (campainSum / 8);
    console.log(outSum);    
}
charityCampain ('131', '5', '9', '33', '46');

/*
7.	* Пазар за плодове
Мария решава да мине на диета и отива до близкия пазар, за да купи ягоди, банани, портокали и малини. Функцията получава цената на ягодите в лв./кг. и количеството на бананите, портокалите, малините и ягодите, които трябва да закупи. Да се напише функция, която пресмята колко пари са ѝ необходими за да плати сметката, като знаете, че:
•	цената на малините е на половина по-ниска от тази на ягодите;
•	цената на портокалите е с 40% по-ниска от цената на малините;
•	цената на бананите е с 80% по-ниска от цената на малините.

Вход
Функцията получава 5 аргумента:
1.	Цена на ягодите в лева – реално число в интервала [0.00 … 10000.00]
2.	Количество на бананите в килограми – реално число в интервала [0.00 … 10000.00]
3.	Количество на портокалите в килограми – реално число в интервала [0.00 … 10000.00]
4.	Количество на малините в килограми – реално число в интервала [0.00 … 10000.00]
5.	Количество на ягодите в килограми – реално число в интервала [0.00 … 10000.00]

Изход
Да се отпечата на конзолата едно число:
•	парите, които са необходими на Мария.

Примерен вход и изход
Вход	                            Изход	
("48","10","3.3","6.5","1.7")	    333.12
Вход	                            Изход	
("63.5","3.57","6.35""8.15","2.5")	561.1495
Обяснения	
Цена на малините за килограм: 24 лв.
Цена на портокалите за килограм: 24 – (0.4 * 24) = 14.4 лв.
Цена на бананите за килограм: 24 – (0.8 * 24) = 4.8 лв.
Сума за малините: 6.5 * 24 = 156 лв.
Сума за портокалите: 3.3 * 14.4 = 47.52 лв.
Сума за бананите: 4.8 * 10 = 48 лв.
Сума за ягодите: 1.7 * 48 = 81.6 лв.
Обща сума: 156 + 47.52 + 48 + 81.6 = 333.12 лв.	
*/